// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RateTheKFC.Data;

#nullable disable

namespace RateTheKFC.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240911183234_DataSeeded")]
    partial class DataSeeded
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("RateTheKFC.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Атырау"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Астана"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Алматы"
                        });
                });

            modelBuilder.Entity("RateTheKFC.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<int>("CityId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Comments")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TwoGisLink")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityId = 1,
                            Name = "Best Chicken"
                        },
                        new
                        {
                            Id = 2,
                            CityId = 1,
                            Name = "KFC Atyrau"
                        },
                        new
                        {
                            Id = 3,
                            CityId = 2,
                            Name = "Чики Пики Чикен"
                        });
                });

            modelBuilder.Entity("RateTheKFC.Models.Feedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Comments")
                        .HasColumnType("TEXT");

                    b.Property<int>("CompanyId")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("Fattiness")
                        .HasColumnType("REAL");

                    b.Property<double?>("Pepperiness")
                        .HasColumnType("REAL");

                    b.Property<double?>("Politeness")
                        .HasColumnType("REAL");

                    b.Property<double?>("Salinity")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("RateTheKFC.Models.Company", b =>
                {
                    b.HasOne("RateTheKFC.Models.City", null)
                        .WithMany("Companies")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RateTheKFC.Models.Feedback", b =>
                {
                    b.HasOne("RateTheKFC.Models.Company", null)
                        .WithMany("Feedbacks")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RateTheKFC.Models.City", b =>
                {
                    b.Navigation("Companies");
                });

            modelBuilder.Entity("RateTheKFC.Models.Company", b =>
                {
                    b.Navigation("Feedbacks");
                });
#pragma warning restore 612, 618
        }
    }
}
